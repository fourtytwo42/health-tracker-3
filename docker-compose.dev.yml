version: '3.8'

services:
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: health-tracker-app-dev
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://health_user:health_password@postgres:5432/health_tracker
      - JWT_SECRET=${JWT_SECRET:-dev-jwt-secret}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET:-dev-refresh-secret}
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - health-network
    command: npm run dev

  postgres:
    image: postgres:16-alpine
    container_name: health-tracker-postgres-dev
    environment:
      POSTGRES_DB: health_tracker
      POSTGRES_USER: health_user
      POSTGRES_PASSWORD: health_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U health_user -d health_tracker"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - health-network

  minio:
    image: minio/minio:latest
    container_name: health-tracker-minio-dev
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data_dev:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - health-network

volumes:
  postgres_data_dev:
  minio_data_dev:

networks:
  health-network:
    driver: bridge 